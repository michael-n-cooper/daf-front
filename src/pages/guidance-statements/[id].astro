---
import Layout from "../../layouts/Layout.astro";
import CommentLinkItem from "../../components/CommentLinkItem.astro";
import {
	baseUri,
	findObjectByProperties,
	idFrag,
	mdToHtml,
	apiGet,
} from "../../script/util.js";
import { loadStaticPaths } from "../../components/load-static-paths";
import pLimit from "p-limit";

const limit = pLimit(10);

export async function getStaticPaths() {
	const section = "guidance-statements";
	const paths = await loadStaticPaths(section);
	return paths;
}

const { id } = Astro.params;

const json = await apiGet("statements/" + id);

function cleanMappings(mappingsResult) {
	var res = new Array();
	mappingsResult.forEach(function (mapping) {
		if (
			mapping.id != "" &&
			!findObjectByProperties(res, { id: mapping.id })
		)
			res.push(mapping);
	});
	return res;
}

async function getMappings(id) {
	return limit(() => apiGet(id));
}

var actmPromises = new Array();
json[0]["simple-curve-maps"].forEach((mapping) =>
	actmPromises.push(getMappings("simple-curve-maps/" + idFrag(mapping.id)))
);
let actm = [];
//console.log(actmPromises)
await Promise.all(actmPromises).then(function (results) {
	results.forEach((result) => (actm = actm.concat(result)));
});
const accommTypeMappings = cleanMappings(actm);
//?id ?stmtId ?abilityId ?abilityLabel ?accomId ?accomLabel ?charId ?charLabel ?applicable
---

<style is:global>
	.stmt {
		font-weight: bold;
	}
</style>
<Layout title={json[0].label}>
		<p class="stmt">{json[0].stmt}</p>
		<CommentLinkItem id={id} label={json[0].label}></CommentLinkItem>
		{
			typeof json[0].note !== "undefined" && json[0].note != null ? (
				<Fragment
					set:html={"<h2>Notes</h2>" + mdToHtml(json[0].note)}
				/>
			) : (
				""
			)
		}
	<section>
			<h2>Mappings</h2>
			<table>
				<thead>
					<tr
						><th>Required ability</th><th
							>Accessibility characteristic</th
						><th>Support needed</th></tr
					>
				</thead>
				<tbody>
					{
						accommTypeMappings.map((item) => (
							<tr>
								<td>
									<a
										href={
											baseUri +
											"functional-abilities/" +
											idFrag(item.abilityId)
										}
									>
										{item.abilityLabel}
									</a>
								</td>
								<td>
									<a
										href={
											baseUri +
											"accessibility-characteristics/" +
											idFrag(item.charId)
										}
									>
										{item.charLabel}
									</a>
								</td>
								<td>
									<a
										href={
											baseUri +
											"accommodation-types/" +
											idFrag(item.accommId)
										}
									>
										{item.accommLabel}
									</a>
								</td>
							</tr>
						))
					}
				</tbody>
			</table>
		</section>
		<section>
			<h2>References</h2>
			<ul>
				{
					json[0].references.map((item) => (
						<li>
							{idFrag(item.type)}:{" "}
							<a href={item.refIRI}>{item.refNote}</a>
						</li>
					))
				}
			</ul>
		</section>
		<section>
			<h2>Tags</h2>
			<ul>
				{
					json[0].tags.map((item) => (
						<li>
							<a href={baseUri + "tags/" + idFrag(item.id)}>
								{item.label}
							</a>
						</li>
					))
				}
			</ul>
			<p>
				Imported from <a href={json[0].contentIRI}
					>{json[0].contentIRI}</a
				>
			</p>
		</section>
</Layout>
